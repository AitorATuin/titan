#!/usr/bin/env lua

local argparse = require 'argparse'

local checker = require 'titan-compiler.checker'
local parser = require 'titan-compiler.parser'
local util = require 'titan-compiler.util'

local p = argparse('titan', 'Titan compiler')
p:argument('input', 'Input file.')
p:flag('--print-ast', 'Print the AST.')
local args = p:parse()

-- Work like assert, but don't print the stack trace
local function exit(msg)
    io.stderr:write(arg[0], ": ", msg, "\n")
    os.exit(1)
end

local input, err
if args.input == '-' then
    input = io.read("*a")
else
    input, errmsg = util.get_file_contents(args.input)
    if not input then exit(errmsg) end
end

local ast, err = parser.parse(input)
if not ast then exit(parser.error_to_string(err)) end

if args.print_ast then
    print(parser.pretty_print_ast(ast))
end

local ok, errmsg = checker.check(ast)
if not ok then exit(errsmg) end

